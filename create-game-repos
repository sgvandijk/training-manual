#!/usr/bin/env bash

################################################################################
############################## Create Game Repos ###############################
################################################################################

###########################################################
# You must have a $TOKEN_OWNER token                      #
# saved to your ENV variables in order to use this script #
###########################################################
COLLAB_REPO=$1

################################################################################
########################## Functions Below #####################################
################################################################################
################################################################################
#### Function ContainsElement ##################################################
function ContainsElement() {
  local e
  for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 1; done
  return 0
}
################################################################################
#### Function GetNames #########################################################
function GetNames() {
  ##########
  # Header #
  ##########
  echo "Trying to clone a template repo from $ROOT_URL."

  ######################
  # Check the root url #
  ######################
  if [[ "$ROOT_URL" == "github.com" ]]; then
    ##############
    # Clone repo #
    ##############
    git clone --bare "https://github.com/githubtraining/github-games" game-template >> log.out 2>&1
  else
    ##############
    # Clone repo #
    ##############
    git clone --bare "https://$TOKEN_OWNER:$TEACHER_PAT@$ROOT_URL/$CLASS_ORG/github-games" game-template >> log.out 2>&1

    #######################
    # Load the error code #
    #######################
    ERROR_CODE=$?

    #########################
    # Check the shell error #
    #########################
    if [ $ERROR_CODE -ne 0 ]; then
      echo "!!! Couldn't clone template repo at all. Please grab a copy from https://github.com/githubtraining/github-games and upload it to your GHE instance."
      exit 1
    fi
  fi

  ###########
  # Push it #
  ###########
  pushd game-template || return

  ###############
  # Get collabs #
  ###############
  IFS=" " read -ra COLLABS <<< "$(
    curl -s -u "$TOKEN_OWNER:$TEACHER_PAT" -X GET "https://$INSTANCE_URL/repos/$CLASS_ORG/$COLLAB_REPO/collaborators?affiliation=direct&per_page=100" | jq -r 'map(.login) | unique | @sh' | tr -d \'
  )" >> log.out 2>&1

  for USER_NAME in "${COLLABS[@]}"; do
    REPO_STATUS=$(curl -s -i -u "$TOKEN_OWNER:$TEACHER_PAT" -X GET "https://$INSTANCE_URL/repos/$CLASS_ORG/github-games-$USER_NAME" | grep "^Status:") >> log.out 2>&1
    echo "Repo status for $USER_NAME is $REPO_STATUS"
    if
      echo "$REPO_STATUS" | grep -iq "404"
    then
      CreateRepo "$USER_NAME"
    else
      # Check before cleaning up and recreating any duplicate repos
      echo "A github-games repo already exists for $USER_NAME. Is OK to delete and recreate? (Y or N)"
      read -r DELETE_OK
      if echo "$DELETE_OK" | grep -iq "^y"; then
        echo "Deleting and recreating $CLASS_ORG/github-games-$USER_NAME repo..."
        curl -i -u "$TOKEN_OWNER:$TEACHER_PAT" -X DELETE "https://$INSTANCE_URL/repos/$CLASS_ORG/github-games-$USER_NAME" >> log.out 2>&1
        CreateRepo "$USER_NAME"
      else
        echo "A new github-games repo wasn't created for $USER_NAME..."
      fi
    fi
  done
  popd || return
  echo "Remove the local (temporary) clone"
  rm -rf game-template
}
################################################################################
#### Function CreateRepo #######################################################
function CreateRepo() {
  ####################
  # Pull in the vars #
  ####################
  STUDENT=$1
  STUDENT_REPO="github-games-"$STUDENT
  PAGES_URL=''
  echo "Time to create $STUDENT_REPO for $STUDENT"
  #create a repo named github-games-$STUDENT in $CLASS_ORG org
  echo "Create server-side location for fresh $CLASS_ORG/$STUDENT_REPO repo..."

  ##################
  # Check the root #
  ##################
  if [[ "$ROOT_URL" == "github.com" ]]; then
    echo "Creating on GITHUB"
    PAGES_URL="https://${CLASS_ORG}.github.io/${STUDENT_REPO}/"
  else
    echo "Creating on Enterprise"
    PAGES_URL="https://${ROOT_URL}/pages/${CLASS_ORG}/${STUDENT_REPO}/"
  fi

  #############
  # Create it #
  #############
  curl -s -i -u "${TOKEN_OWNER}:${TEACHER_PAT}" -d "{ \"name\": \"${STUDENT_REPO}\", \"description\": \"A fun way to learn about git troubleshooting.\", \"homepage\": \"${PAGES_URL}\", \"private\": false, \"has_issues\": true, \"has_wiki\": true, \"has_downloads\": true}" -X POST "https://${INSTANCE_URL}/orgs/${CLASS_ORG}/repos" >> log.out 2>&1

  ##################
  # Wait to finish #
  ##################
  echo "Resting 5 seconds to allow repo creation to resolve"
  sleep 5

  #################################
  # Add student as a collaborator #
  #################################
  curl -s -i -u "$TOKEN_OWNER:$TEACHER_PAT" -d "{ \"permission\": \"admin\"}" -X PUT "https://$INSTANCE_URL/repos/$CLASS_ORG/$STUDENT_REPO/collaborators/$STUDENT" >> log.out 2>&1
  echo "Push the fresh $STUDENT_REPO back to $CLASS_ORG ..."

  ###########
  # Push it #
  ###########
  git push --mirror "https://$TOKEN_OWNER:$TEACHER_PAT@$ROOT_URL/$CLASS_ORG/$STUDENT_REPO" >> log.out 2>&1

  ##################
  # Wait to finish #
  ##################
  echo "Waiting for push to resolve before creating issues."
  sleep 5

  ##############################
  # create issues for problems #
  ##############################
  curl -s -i -u "$TOKEN_OWNER:$TEACHER_PAT" -d "{ \"title\": \"Game broken\", \"body\": \"When attempting to access this at ${PAGES_URL}, I am getting a 404. This could be caused by a couple things:\n\n - GitHub pages needs to be enabled on master. You can fix this in the repository settings.\n- the index.html file is incorrectly named inde.html. We will fix this together in class.\n\n Can you please fix the first bullet @$STUDENT?\"}" -X POST "https://$INSTANCE_URL/repos/$CLASS_ORG/$STUDENT_REPO/issues" >> log.out 2>&1
  curl -s -i -u "$TOKEN_OWNER:$TEACHER_PAT" -d "{ \"title\": \"URL in README broken\", \"body\": \"The URL in the README is pointing to $CLASS_ORG's copy of the game instead of yours. \n\n Please fix it so that it points to your copy of the game at ${PAGES_URL}\"}" -X POST "https://$INSTANCE_URL/repos/$CLASS_ORG/$STUDENT_REPO/issues" >> log.out 2>&1

  #############################
  # assign issues to $STUDENT #
  #############################
  for i in {1..2}; do
    curl -s -i -u "$TOKEN_OWNER:$TEACHER_PAT" -d "{\"assignees\": [\"$STUDENT\"]}" -X POST "https://$INSTANCE_URL/repos/$CLASS_ORG/$STUDENT_REPO/issues/$i/assignees" >> log.out 2>&1
  done
}
################################################################################
############################### MAIN ###########################################
################################################################################

#################
# Get the names #
#################
GetNames
