#!/bin/sh

#you must have a githubteacher token
#saved to your ENV variables in order to use this script
reponame=$1

#get details for the README
function getdetails () {
  echo "Let's add the class details to the README:"
  echo "List the class dates."
  echo "Example: March 10 - 13, 2017."
  read classdate
  echo "Who is teaching? Without the @."
  read teacher
  echo "Create a unique name for the survey collector."
  echo "Example: 2017-06-06-open-enrollment."
  read surveyName
  #generate the survey link
  surveyLink=$((curl -s --request PUT --url "https://restapi.surveygizmo.com/v5/survey/$SURVEY_CAMPAIGN/surveycampaign?api_token=$SURVEY_TOKEN&api_token_secret=$SURVEY_SECRET&_method=PUT&type=link&name=$surveyName" | jq .data.uri) | (sed -e 's/^"//' -e 's/"$//')) >> log.out 2>&1
  #append teacher and class type to survey link
  longLink=$surveyLink"?type=developers&teacher="$teacher
  #create a google short link
  shortLink=$((curl -s https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyA-eIC_TChnov4pZYaTmRatjYb1KVLJ8FU -H 'Content-Type: application/json' -d "{\"longUrl\": \"$longLink\"}" | jq .id) | (sed -e 's/^"//' -e 's/"$//')) >> log.out 2>&1
  script/create-repo caption-this $reponame $teacher
  if [ $? -eq 0 ]; then
    git clone https://$TOKEN_OWNER:$TEACHER_PAT@$ROOT_URL/$CLASS_ORG/$reponame $reponame >> log.out 2>&1
    pushd $reponame
    git config user.name "$TOKEN_OWNER" >> log.out 2>&1
    githubemail=$((curl -s -u "$TOKEN_OWNER:$TEACHER_PAT" -X GET https://$INSTANCE_URL/users/$TOKEN_OWNER | jq .email) | (sed -e 's/^"//' -e 's/"$//')) >> log.out 2>&1
    git config user.email "$githubemail" >> log.out 2>&1
    sed -i "s/THIS-DATE/$classdate/g" README.md >> log.out 2>&1
    sed -i "s/TEACHER-HANDLE/$teacher/g" README.md >> log.out 2>&1
    sed -i "s|SURVEY-LINK|$shortLink|g" README.md >> log.out 2>&1
    git add README.md >> log.out 2>&1
    git commit -m "create class README" >> log.out 2>&1
    sed -i "" "s|caption-this|$reponame|g" _config.yml >> log.out 2>&1
    git add _config.yml >> log.out 2>&1
    git commit -m "update config with class information" >> log.out 2>&1
    git push https://$TOKEN_OWNER:$TEACHER_PAT@$ROOT_URL/$CLASS_ORG/$reponame >> log.out 2>&1
    git config --local --unset user.name >> log.out 2>&1
    git config --local --unset user.email >> log.out 2>&1
    popd
    rm -rf $reponame >> log.out 2>&1
    prettyrepo $teacher
  else
    echo "!!! Wasn't able to clone the template repo from github.com. Are you behind a firewall?"
  fi  
}

function prettyrepo () {
  teacher=$1
  #set branch protections
  curl -s -i -H "Accept: application/vnd.github.loki-preview+json" -u "$TOKEN_OWNER:$TEACHER_PAT" -d "{ \"required_status_checks\": { \"strict\": false, \"contexts\": [ \"null\" ] }, \"required_pull_request_reviews\": { \"dismissal_restrictions\": { \"users\": [ \"$teacher\" ], \"teams\": [ \"null\" ] }, \"dismiss_stale_reviews\": false }, \"enforce_admins\": false, \"restrictions\": { \"users\": [ \"$teacher\", \"$TOKEN_OWNER\" ], \"teams\": [ \"null\" ] } }" -X PUT https://$INSTANCE_URL/repos/$CLASS_ORG/$reponame/branches/master/protection >> log.out 2>&1
  curl -s -i -H "Accept: application/vnd.github.loki-preview+json" -u "$TOKEN_OWNER:$TEACHER_PAT" -X DELETE https://$INSTANCE_URL/repos/$CLASS_ORG/$reponame/branches/master/protection/required_status_checks >> log.out 2>&1
  #delete labels other than question, duplicate, enhancement, and help wanted
  curl -s -i -u "$TOKEN_OWNER:$TEACHER_PAT" -X DELETE https://$INSTANCE_URL/repos/$CLASS_ORG/$reponame/labels/bug >> log.out 2>&1
  curl -s -i -u "$TOKEN_OWNER:$TEACHER_PAT" -X DELETE https://$INSTANCE_URL/repos/$CLASS_ORG/$reponame/labels/invalid >> log.out 2>&1
  curl -s -i -u "$TOKEN_OWNER:$TEACHER_PAT" -X DELETE https://$INSTANCE_URL/repos/$CLASS_ORG/$reponame/labels/wontfix >> log.out 2>&1
  #open the issue to be added as a collaborator
  curl -s -i -u "$TOKEN_OWNER:$TEACHER_PAT" -d "{ \"title\": \"Comment here to be added as a collaborator\", \"body\": \"### Comment below - you can say anything \n We will all be using this repository today. Even though it's public right now, you will not be able to make changes until you're given the correct permissions. We've automated this process via the GitHub API and some fancy chatops. Once you comment, we will add you as a collaborator. \n\n  You'll also start to receive a lot of emails. (:exclamation:) You can slow these down immediately by clicking the 'unsubscribe' button.\"}" -X POST https://$INSTANCE_URL/repos/$CLASS_ORG/$reponame/issues >> log.out 2>&1
  #add a project to the repo and grab the project id
  projID=$(curl -s -H "Accept: application/vnd.github.inertia-preview+json" -u "$TOKEN_OWNER:$TEACHER_PAT" -d "{ \"name\": \"Class Activity: Caption Contest\", \"body\": \"Let's see who can create the best captions for our collection of memes.\"}" -X POST https://$INSTANCE_URL/repos/$CLASS_ORG/$reponame/projects | jq .id) >> log.out 2>&1
  #add columns to project
  columnOne=$(curl -s -H "Accept: application/vnd.github.inertia-preview+json" -u "$TOKEN_OWNER:$TEACHER_PAT" -d "{ \"name\": \"To-Do\"}" -X POST https://$INSTANCE_URL/projects/$projID/columns | jq .id) >> log.out 2>&1
  columnTwo=$(curl -s -H "Accept: application/vnd.github.inertia-preview+json" -u "$TOKEN_OWNER:$TEACHER_PAT" -d "{ \"name\": \"Extended Projects\"}" -X POST https://$INSTANCE_URL/projects/$projID/columns | jq .id) >> log.out 2>&1
  curl -s -H "Accept: application/vnd.github.inertia-preview+json" -u "$TOKEN_OWNER:$TEACHER_PAT" -d "{ \"name\": \"In-Progress\"}" -X POST https://$INSTANCE_URL/projects/$projID/columns >> log.out 2>&1
  curl -s -H "Accept: application/vnd.github.inertia-preview+json" -u "$TOKEN_OWNER:$TEACHER_PAT" -d "{ \"name\": \"Done\"}" -X POST https://$INSTANCE_URL/projects/$projID/columns >> log.out 2>&1
  #add cards to each column
  curl -s -i -H "Accept: application/vnd.github.inertia-preview+json" -u "$TOKEN_OWNER:$TEACHER_PAT" -d "{ \"note\": \"Each student will update their file in the _posts directory with an image and a caption.\"}" -X POST https://$INSTANCE_URL/projects/columns/$columnOne/cards >> log.out 2>&1
  finishstrong
}

function finishstrong () {
  echo "ALL DONE: Remember to enable GitHub Pages on master."
  echo "Good luck with class!"
}

echo "This script creates a new caption-this repository"
getdetails
